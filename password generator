import random
import string

def generate_password(length, use_uppercase=True, use_numbers=True, use_symbols=True):
    # Define characters to use based on user's criteria
    characters = string.ascii_lowercase
    if use_uppercase:
        characters += string.ascii_uppercase
    if use_numbers:
        characters += string.digits
    if use_symbols:
        characters += string.punctuation

    # Generate password
    password = ''.join(random.choice(characters) for _ in range(length))
    return password

def password_strength(password):
    # Check password strength
    strength = 0
    length = len(password)

    # Add points for length
    strength += length * 4

    # Add points for uppercase letters if any
    if any(char.isupper() for char in password):
        strength += length * 2

    # Add points for lowercase letters if any
    if any(char.islower() for char in password):
        strength += length * 2

    # Add points for digits if any
    if any(char.isdigit() for char in password):
        strength += length * 4

    # Add points for symbols if any
    if any(char in string.punctuation for char in password):
        strength += length * 6

    # Deduct points for common sequences (e.g., "1234", "abcd")
    for seq in ['123456', '654321', 'abcdef', 'fedcba', 'password']:
        if seq in password.lower():
            strength -= 50

    # Categorize password strength
    if strength > 100:
        category = "Strong"
    elif strength > 60:
        category = "Moderate"
    else:
        category = "Weak"

    return strength, category

def main():
    print("Welcome to the Password Generator!")
    length = int(input("Enter desired password length: "))
    use_uppercase = input("Include uppercase letters? (yes/no): ").lower() == 'yes'
    use_numbers = input("Include numbers? (yes/no): ").lower() == 'yes'
    use_symbols = input("Include symbols? (yes/no): ").lower() == 'yes'

    password = generate_password(length, use_uppercase, use_numbers, use_symbols)
    print(f"\nYour generated password is: {password}")

    strength, category = password_strength(password)
    print(f"Password strength: {category} ({strength} points)")

if __name__ == "__main__":
    main()
